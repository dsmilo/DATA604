bind_rows(sim)
tbl_df(bind_rows(sim))
sim <- list()
for (p in 1:length(produce)) {
# get 90 simulated sales for produce item
sales <- sample(min_sales[p]:max_sales[p], num_days, replace = TRUE)
# calculate revenue, cost, and profit
df <- data.frame(day_no = 1:num_days, sales) %>%
mutate(revenue = sales * retail[p],
cost = sales * wholesale[p],
profit = revenue - cost)
# add item name
df$item <- rep(produce[p], num_days)
# store in list
sim[[p]] <- df
}
tbl_df(bind_rows(sim))
list(c('a', 'b'))
list(c(c('a', 'b'), 'b'))
list(c('a', 'b'), 'b')
produce <- c('oats', 'peas', 'beans', 'barley')
wholesale <- c(1.05, 3.17, 1.99, 0.95)
retail <- c(1.29, 3.76, 2.23, 1.65)
min_sales <- rep(0, 4)
max_sales <- c(10, 8, 14, 11)
num_days <- 90
walther <- list()
for (p in 1:length(produce)) {
# get 90 simulated sales for produce item
sales <- sample(min_sales[p]:max_sales[p], num_days, replace = TRUE)
# calculate revenue, cost, and profit
df <- data.frame(day_no = 1:num_days, sales) %>%
mutate(revenue = sales * retail[p],
cost = sales * wholesale[p],
profit = revenue - cost)
# add item name
df$item <- rep(produce[p], num_days)
# store in list
walther[[p]] <- df
}
walther <- tbl_df(bind_rows(walther))
daily <- walther %>% group_by(day_no) %>% summarise()
daily
daily <- walther %>% group_by(day_no) %>%
summarise(revenue = sum(revenue),
cost = sum(cost),
profit = sum(profit))
daily
running <- walther %>% group_by(day_no) %>%
summarise(revenue = cumsum(revenue),
cost = cumsum(cost),
profit = cumsum(profit))
running <- walther %>% group_by(day_no) %>%
mutate(r = cumsum(revenue),
c = cumsum(cost),
p = cumsum(profit))
running
running <- walther %>% group_by(day_no) %>%
mutate(r = cumsum(revenue),
c = cumsum(cost),
p = cumsum(profit)) %>%
select(day_no, r, c, p)
running
running <- daily %>% transmute(
r = cumsum(revenue), c = cumsum(cost), p = cumsum(profit)
)
running
daily
9.53 + 8.65
daily <- walther %>% group_by(day_no) %>%
summarise(revenue = sum(revenue),
cost = sum(cost),
profit = sum(profit)) %>%
mutate(
total_revenue = cumsum(revenue),
total_cost = cumsum(cost),
total_profit = cumsum(profit)
)
daily
daily <- walther %>% group_by(day_no) %>%
summarise(revenue = sum(revenue),
cost = sum(cost),
profit = sum(profit)) %>%
mutate(
running_revenue = cumsum(revenue),
running_cost = cumsum(cost),
running_profit = cumsum(profit)
)
daily
daily[90, ]
walther %>% summarise(r = sum(revenue), c = sum(cost), p = sum(profit))
identical(daily[nrow(daily), 5:7],
walther %>%
summarise(r = sum(revenue), c = sum(cost), p = sum(profit))
)
daily[nrow(daily), 5:7] ==
walther %>%
summarise(r = sum(revenue), c = sum(cost), p = sum(profit))
ggplot(walther, aes(x = dayno, y = profit)) + geom_line(aes(col = factor(item)))
ggplot(walther, aes(x = day_no, y = profit)) + geom_line(aes(col = factor(item)))
ggplot(walther, aes(x = day_no, y = profit)) + geom_line() + facet_wrap(~item)
ggplot(daily, aes(x = day_no, y = profit)) + geom_line()
ggplot(daily, aes(x = day_no, y = running_profit)) + geom_line()
ggplot(daily, aes(x = day_no, y = profit)) + geom_histogram()
ggplot(daily, aes(x = profit)) + geom_histogram()
tot <- daily[nrow(daily), "running_revenue":"running_profit"]
tot
tot <- daily[nrow(daily), running_revenue:running_profit]
tot <- daily[nrow(daily), c("running_revenue", "running_cost", "running_profit")]
tot
library(tidyverse)
produce <- c('oats', 'peas', 'beans', 'barley')
wholesale <- c(1.05, 3.17, 1.99, 0.95)
retail <- c(1.29, 3.76, 2.23, 1.65)
min_sales <- rep(0, 4)
max_sales <- c(10, 8, 14, 11)
num_days <- 90
walther <- list()
for (p in 1:length(produce)) {
# get 90 simulated sales for produce item
set.seed(42) # set random number generator seed for replicability
sales <- sample(min_sales[p]:max_sales[p], num_days, replace = TRUE)
# calculate revenue, cost, and profit
df <- data.frame(day_no = 1:num_days, sales) %>%
mutate(revenue = sales * retail[p],
cost = sales * wholesale[p],
profit = revenue - cost)
# add item name
df$item <- rep(produce[p], num_days)
# store in list
walther[[p]] <- df
}
walther <- tbl_df(bind_rows(walther))
daily <- walther %>%
group_by(day_no) %>%
summarise(revenue = sum(revenue),
cost = sum(cost),
profit = sum(profit)) %>%
mutate(
running_revenue = cumsum(revenue),
running_cost = cumsum(cost),
running_profit = cumsum(profit)
)
tot <- daily[nrow(daily), c("running_revenue", "running_cost", "running_profit")]
tot
ggplot(daily, aes(x = day_no)) +
geom_line(aes(y = running_revenue, col = 'Revenue')) +
geom_line(aes(y = running_cost, col = 'Cost')) +
geom_line(aes(y = running_profit, col = 'Profit'))
ggplot(daily, aes(x = day_no)) +
geom_line(aes(y = running_revenue, col = 'Revenue')) +
geom_line(aes(y = running_cost, col = 'Cost')) +
geom_line(aes(y = running_profit, col = 'Profit')) +
scale_x_continuous('Day Number') + scale_y_continuous(NULL)
ggplot(daily, aes(x = day_no)) +
geom_line(aes(y = running_revenue, col = 'Revenue')) +
geom_line(aes(y = running_cost, col = 'Cost')) +
geom_line(aes(y = running_profit, col = 'Profit')) +
scale_x_continuous('Day Number') + scale_y_continuous(NULL) +
scale_color_discrete(NULL)
item <- walther %>%
group_by(item) %>%
summarise(revenue = sum(revenue),
cost = sum(cost),
profit = sum(profit)) %>%
mutate(
running_revenue = cumsum(revenue),
running_cost = cumsum(cost),
running_profit = cumsum(profit)
)
item
item <- walther %>%
group_by(item, day_no) %>%
summarise(revenue = sum(revenue),
cost = sum(cost),
profit = sum(profit)) %>%
mutate(
running_revenue = cumsum(revenue),
running_cost = cumsum(cost),
running_profit = cumsum(profit)
)
item
ggplot(item, aes(x = day_no)) +
geom_line(aes(y = running_revenue, col = 'Revenue')) +
geom_line(aes(y = running_cost, col = 'Cost')) +
geom_line(aes(y = running_profit, col = 'Profit')) +
scale_x_continuous('Day Number') + scale_y_continuous(NULL) +
scale_color_discrete(NULL) +
facet_wrap(~item, nrow = 2, scales = 'free_y')
str(walther)
ggplot(walther, aes(x = day_no, y = sales)) + geom_line()
ggplot(walther, aes(x = day_no, y = sales)) + geom_col()
ggplot(walther, aes(x = day_no, y = sales)) + geom_col() + facet_wrap(~item)
ggplot(walther, aes(x = day_no, y = sales)) + geom_col(aes(fill = item))
ggplot(walther, aes(x = day_no, y = sales)) + geom_col(aes(fill = item), position = 'identity')
ggplot(walther, aes(x = day_no, y = sales)) + geom_col(aes(fill = item), position = 'dodge')
ggplot(walther, aes(x = day_no, y = sales)) + geom_col() + facet_wrap(~item)
?cumany
item <- walther %>%
group_by(item) %>%
mutate(avg_sales = cummean(sales))
ggplot(item, aes(x = day_no)) + geom_col(aes(y = sales)) + geom_line(aes(y = avg_sales)) + facet_wrap(~item)
ggplot(item, aes(x = day_no)) + geom_col(aes(y = sales), alpha = 0.5) + geom_line(aes(y = avg_sales), lwd = 2, lty = 2) + facet_wrap(~item)
ggplot(item, aes(x = day_no)) + geom_col(aes(y = sales), alpha = 0.5) + geom_line(aes(y = avg_sales), lwd = 1, lty = 2) + facet_wrap(~item)
ggplot(item, aes(x = day_no)) + geom_col(aes(y = sales), alpha = 0.5) + geom_line(aes(y = avg_sales), lty = 2) + facet_wrap(~item)
ggplot(item, aes(x = day_no)) + geom_col(aes(y = sales), alpha = 0.5) + geom_line(aes(y = avg_sales), lwd = 1, lty = 2) + facet_wrap(~item)
ggplot(item, aes(x = day_no)) + geom_col(aes(y = sales), alpha = 0.5) + geom_line(aes(y = avg_sales), lwd = 0.75, lty = 2) + facet_wrap(~item)
ggplot(item, aes(x = day_no)) + geom_col(aes(y = sales), alpha = 0.5) + geom_line(aes(y = avg_sales), lwd = 0.75, lty = 3) + facet_wrap(~item)
ggplot(item, aes(x = day_no)) + geom_col(aes(y = sales), alpha = 0.5) + geom_line(aes(y = avg_sales), lty = 3) + facet_wrap(~item)
ggplot(item, aes(x = day_no)) + geom_col(aes(y = sales), alpha = 0.5) + geom_line(aes(y = avg_sales), lwd = 0.75, lty = 3, col = 'red') + facet_wrap(~item)
ggplot(item, aes(x = day_no)) + geom_col(aes(y = sales), alpha = 0.5) + geom_line(aes(y = avg_sales, col = item), lwd = 0.75, lty = 3, col = 'red') + facet_wrap(~item)
ggplot(item, aes(x = day_no)) + geom_col(aes(y = sales), alpha = 0.5) + geom_line(aes(y = avg_sales), lwd = 0.75, lty = 3) + facet_wrap(~item)
ggplot(item, aes(x = day_no)) + geom_col(aes(y = sales), alpha = 0.5) + geom_line(aes(y = avg_sales, col = item), lwd = 0.75, lty = 3) + facet_wrap(~item)
ggplot(item, aes(x = day_no)) + geom_col(aes(y = sales), alpha = 0.5) + geom_line(aes(y = avg_sales, col = item), lwd = 0.75, lty = 3, show.legend = FALSE) + facet_wrap(~item)
ggplot(item, aes(x = day_no)) + geom_col(aes(y = sales), alpha = 0.5) + geom_line(aes(y = avg_sales, col = item), lwd = 1, lty = 3, show.legend = FALSE) + facet_wrap(~item)
ggplot(item, aes(x = day_no)) + geom_col(aes(y = sales), alpha = 0.5) + geom_line(aes(y = avg_sales, col = item), lwd = 1, lty = 2, show.legend = FALSE) + facet_wrap(~item)
ggplot(item, aes(x = day_no)) + geom_col(aes(y = sales), alpha = 0.5) + geom_line(aes(y = avg_sales, col = item), lwd = 1, lty = 1, show.legend = FALSE) + facet_wrap(~item)
ggplot(item, aes(x = day_no)) +
geom_col(aes(y = sales), alpha = 0.5) +
geom_line(aes(y = avg_sales, col = item), show.legend = FALSE) +
facet_wrap(~item)
ggplot(daily, aes(x = day_no)) +
geom_line(aes(y = running_revenue, col = 'Revenue')) +
geom_line(aes(y = running_cost, col = 'Cost')) +
geom_line(aes(y = running_profit, col = 'Profit')) +
scale_x_continuous('Day Number') + scale_y_continuous(NULL) +
scale_color_discrete(NULL)
ggplot(daily, aes(x = day_no)) +
geom_line(aes(y = running_revenue, col = 'Revenue')) +
geom_line(aes(y = running_cost, col = 'Cost')) +
geom_line(aes(y = running_profit, col = 'Profit')) +
scale_x_continuous('Day Number') + scale_y_continuous(NULL) +
scale_color_discrete(NULL) + theme(legend.position = c(1,1))
ggplot(daily, aes(x = day_no)) +
geom_line(aes(y = running_revenue, col = 'Revenue')) +
geom_line(aes(y = running_cost, col = 'Cost')) +
geom_line(aes(y = running_profit, col = 'Profit')) +
scale_x_continuous('Day Number') + scale_y_continuous(NULL) +
scale_color_discrete(NULL) +
theme(legend.position = c(1,1), legend.justification = c(0,0))
ggplot(daily, aes(x = day_no)) +
geom_line(aes(y = running_revenue, col = 'Revenue')) +
geom_line(aes(y = running_cost, col = 'Cost')) +
geom_line(aes(y = running_profit, col = 'Profit')) +
scale_x_continuous('Day Number') + scale_y_continuous(NULL) +
scale_color_discrete(NULL) +
theme(legend.position = c(1,1), legend.justification = c(1,1))
ggplot(daily, aes(x = day_no)) +
geom_line(aes(y = running_revenue, col = 'Revenue')) +
geom_line(aes(y = running_cost, col = 'Cost')) +
geom_line(aes(y = running_profit, col = 'Profit')) +
scale_x_continuous('Day Number') + scale_y_continuous(NULL) +
scale_color_discrete(NULL) +
theme(legend.position = c(0,1), legend.justification = c(1,1))
ggplot(daily, aes(x = day_no)) +
geom_line(aes(y = running_revenue, col = 'Revenue')) +
geom_line(aes(y = running_cost, col = 'Cost')) +
geom_line(aes(y = running_profit, col = 'Profit')) +
scale_x_continuous('Day Number') + scale_y_continuous(NULL) +
scale_color_discrete(NULL) +
theme(legend.position = c(0,1), legend.justification = c(0,1))
ggplot(daily, aes(x = day_no)) +
geom_line(aes(y = running_revenue, col = 'Revenue')) +
geom_line(aes(y = running_cost, col = 'Cost')) +
geom_line(aes(y = running_profit, col = 'Profit')) +
scale_x_continuous('Day Number') + scale_y_continuous(NULL) +
scale_color_discrete(NULL) +
theme(legend.position = c(0.1, 0.9), legend.justification = c(0,1))
ggplot(daily, aes(x = day_no)) +
geom_line(aes(y = running_revenue, col = 'Revenue')) +
geom_line(aes(y = running_cost, col = 'Cost')) +
geom_line(aes(y = running_profit, col = 'Profit')) +
scale_x_continuous('Day Number') + scale_y_continuous(NULL) +
scale_color_discrete(NULL, breaks = c('Revenue', 'Cost', 'Profit')) +
theme(legend.position = c(0.1, 0.9), legend.justification = c(0,1)) +
ggtitle('Running Total of Revenue, Profit, and Costs')
ggplot(daily, aes(x = day_no)) +
geom_line(aes(y = running_revenue, col = 'Revenue')) +
geom_line(aes(y = running_cost, col = 'Cost')) +
geom_line(aes(y = running_profit, col = 'Profit')) +
scale_x_continuous('Day Number') + scale_y_continuous(NULL) +
scale_color_discrete(NULL, breaks = c('Revenue', 'Cost', 'Profit')) +
theme(legend.position = c(0.1, 0.9), legend.justification = c(0,1)) +
labs(title = 'Running totals of revenue, profit, and cost',
subtitle = 'Across all items over 90 days')
ggplot(item, aes(x = day_no)) +
geom_col(aes(y = sales), alpha = 0.5) +
geom_line(aes(y = avg_sales, col = item), show.legend = FALSE) +
facet_wrap(~item)
ggplot(item, aes(x = day_no)) +
geom_col(aes(y = sales), alpha = 0.5) +
geom_line(aes(y = avg_sales, col = item), show.legend = FALSE) +
facet_wrap(~item, scales = 'free_y')
ggplot(item, aes(x = day_no)) +
geom_col(aes(y = sales), alpha = 0.5) +
geom_line(aes(y = avg_sales, col = item), show.legend = FALSE) +
facet_wrap(~item, scales = 'free_y') +
scale_y_continuous(NULL)
ggplot(item, aes(x = day_no)) +
geom_col(aes(y = sales), alpha = 0.5) +
geom_line(aes(y = avg_sales, col = item), show.legend = FALSE) +
facet_wrap(~item, scales = 'free_y') +
scale_y_continuous('Sales') + scale_x_continuous(NULL) +
labs(title = 'Daily sales for each item available',
caption = 'Bars = Daily Value; Lines = Average Value')
library(scales)
ggplot(item, aes(x = day_no)) +
geom_col(aes(y = sales), alpha = 0.5) +
geom_line(aes(y = avg_sales, col = item), show.legend = FALSE) +
facet_wrap(~item, scales = 'free_y') +
scale_y_continuous('Sales', breaks = pretty_breaks()) + scale_x_continuous(NULL) +
labs(title = 'Daily sales for each item available',
caption = 'Bars = Daily Value; Lines = Average Value')
ggplot(daily, aes(x = day_no)) +
geom_line(aes(y = running_revenue, col = 'Revenue')) +
geom_line(aes(y = running_cost, col = 'Cost')) +
geom_line(aes(y = running_profit, col = 'Profit')) +
scale_x_continuous('Day Number') + scale_y_continuous(NULL) +
scale_color_discrete(NULL, breaks = c('Revenue', 'Cost', 'Profit')) +
theme(legend.position = c(0.1, 0.9), legend.justification = c(0,1)) +
labs(title = 'Running totals of revenue, profit, and cost',
subtitle = 'Across all items over 90 days')
ggplot(item, aes(x = day_no)) +
geom_col(aes(y = sales), alpha = 0.5) +
geom_line(aes(y = avg_sales, col = item), show.legend = FALSE) +
facet_wrap(~item, scales = 'free_y') +
scale_y_continuous('Sales', breaks = pretty_breaks()) + scale_x_continuous(NULL) +
labs(title = 'Daily sales for each item available',
caption = 'Bars = Daily Value; Lines = Average Value')
library(tidyverse)
produce <- c('oats', 'peas', 'beans', 'barley')
wholesale <- c(1.05, 3.17, 1.99, 0.95)
retail <- c(1.29, 3.76, 2.23, 1.65)
min_sales <- rep(0, 4)
max_sales <- c(10, 8, 14, 11)
num_days <- 90
walther <- list()
for (p in 1:length(produce)) {
# get 90 simulated sales for produce item
set.seed(42) # set random number generator seed for replicability
sales <- sample(min_sales[p]:max_sales[p], num_days, replace = TRUE)
# calculate revenue, cost, and profit
df <- data.frame(day_no = 1:num_days, sales) %>%
mutate(revenue = sales * retail[p],
cost = sales * wholesale[p],
profit = revenue - cost)
# add item name
df$item <- rep(produce[p], num_days)
# store in list
walther[[p]] <- df
}
walther <- tbl_df(bind_rows(walther))
daily <- walther %>%
group_by(day_no) %>%
summarise(revenue = sum(revenue),
cost = sum(cost),
profit = sum(profit)) %>%
mutate(
running_revenue = cumsum(revenue),
running_cost = cumsum(cost),
running_profit = cumsum(profit)
)
daily[nrow(daily), 5:7]
tot <- daily[nrow(daily), 5:7]
item <- walther %>%
group_by(item) %>%
mutate(avg_sales = cummean(sales))
ggplot(daily, aes(x = day_no)) +
geom_line(aes(y = running_revenue, col = 'Revenue')) +
geom_line(aes(y = running_cost, col = 'Cost')) +
geom_line(aes(y = running_profit, col = 'Profit')) +
scale_x_continuous('Day Number') + scale_y_continuous(NULL) +
scale_color_discrete(NULL, breaks = c('Revenue', 'Cost', 'Profit')) +
theme(legend.position = c(0.1, 0.9), legend.justification = c(0,1)) +
labs(title = 'Running totals of revenue, profit, and cost',
subtitle = 'Across all items over 90 days')
library(scales)
ggplot(item, aes(x = day_no)) +
geom_col(aes(y = sales), alpha = 0.5) +
geom_line(aes(y = avg_sales, col = item), show.legend = FALSE) +
facet_wrap(~item, scales = 'free_y') +
scale_y_continuous('Sales', breaks = pretty_breaks()) + scale_x_continuous(NULL) +
labs(title = 'Daily sales for each item available',
caption = 'Bars = Daily Value; Lines = Average Value')
tot
ggplot(item, aes(x = day_no)) +
geom_col(aes(y = sales), alpha = 0.5) +
geom_line(aes(y = avg_sales, col = item), show.legend = FALSE) +
facet_wrap(~item, scales = 'free_y') +
scale_y_continuous('Demand (lb)', breaks = pretty_breaks()) +
labs(title = 'Daily sales for each item available',
caption = 'Bars = Daily Value; Lines = Average Value')
ggplot(item, aes(x = day_no)) +
geom_col(aes(y = sales), alpha = 0.5) +
geom_line(aes(y = avg_sales, col = item), show.legend = FALSE) +
facet_wrap(~item, scales = 'free_y') +
scale_y_continuous('Demand (lb)', breaks = pretty_breaks()) +
scale_x_continuous() +
labs(title = 'Daily sales for each item available',
caption = 'Bars = Daily Value; Lines = Average Value')
ggplot(item, aes(x = day_no)) +
geom_col(aes(y = sales), alpha = 0.5) +
geom_line(aes(y = avg_sales, col = item), show.legend = FALSE) +
facet_wrap(~item, scales = 'free_y') +
scale_y_continuous('Demand (lb)', breaks = pretty_breaks()) +
scale_x_continuous('') +
labs(title = 'Daily sales for each item available',
caption = 'Bars = Daily Value; Lines = Average Value')
ggplot(item, aes(x = day_no)) +
geom_col(aes(y = sales), alpha = 0.5) +
geom_line(aes(y = avg_sales, col = item), show.legend = FALSE) +
facet_wrap(~item, scales = 'free_y') +
scale_y_continuous('Demand (lb)', breaks = pretty_breaks()) +
scale_x_continuous(NULL) +
labs(title = 'Daily sales for each item available',
caption = 'Bars = Daily Value; Lines = Average Value')
ggplot(item, aes(x = day_no)) +
geom_col(aes(y = sales), alpha = 0.5) +
geom_line(aes(y = avg_sales, col = item), show.legend = FALSE) +
facet_wrap(~item, scales = 'free_y') +
scale_y_continuous('Demand (lb)', breaks = pretty_breaks()) +
scale_x_continuous('') +
labs(title = 'Daily sales for each item available',
caption = 'Bars = Daily Value; Lines = Average Value')
library("ggplot2")
library("ggthemes")
library("scales")
p <- ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point() +
ggtitle("Cars")
p2 <- ggplot(mtcars, aes(x = wt, y = mpg, colour = factor(gear))) +
geom_point() +
ggtitle("Cars")
p3 <- p2 + facet_wrap(~ am)
p2 + theme_excel() + scale_colour_excel()
plotly::ggplotly()
p
p2
p3
p4 <- ggplot(diamonds, aes(x = clarity, fill = cut)) + geom_bar()
p4
plotly::ggplotly()
p4 + theme_excel()
p4 + theme_excel() + scale_color_excel()
p4 + theme_excel() + scale_fill_excel()
plotly::ggplotly()
p5 <- p4
p4 <- ggplot(mtcars, aes(factor(cyl), mpg))
p4 + theme_tufte(ticks=FALSE) + geom_tufteboxplot()
p + geom_rangeframe() +
theme_tufte() +
scale_x_continuous(breaks = extended_range_breaks()(mtcars$wt)) +
scale_y_continuous(breaks = extended_range_breaks()(mtcars$mpg))
plotly::ggplotly()
p2 + theme_economist() + scale_colour_economist() +
scale_y_continuous(position = "right")
p2 + theme_solarized_2(light = FALSE) +
scale_colour_solarized("blue")
plotly::ggplotly()
p2 + geom_smooth(method = "lm", se = FALSE) +
scale_color_fivethirtyeight("cyl") +
theme_fivethirtyeight()
p2 + theme_igray() + scale_colour_tableau()
L <- c(12.5, 12.625, 14.125, 14.5, 17.25, 17.75)
w <- c(17, 16.5, 23, 26.5, 41, 49)
library(dplyr)
df_bass <- data.frame(L, w) %>%
mutate(
del1 = (w - lag(w)) / (L - lag(L)),
del2 = (del1 - lag(del1)) / (L - lag(L, 2)),
del3 = (del2 - lag(del2)) / (L - lag(L, 3)),
del4 = (del3 - lag(del3)) / (L - lag(L, 4)),
del5 = (del4 - lag(del4)) / (L - lag(L, 5)))
ggplot(df_bass, aes(x = 1:length(L))) +
geom_line(aes(y = w, col = 'Data'), lwd = 1) +
geom_line(aes(y = del1, col = 'Delta')) +
geom_line(aes(y = del2, col = 'Delta2')) +
geom_line(aes(y = del3, col = 'Delta3')) +
geom_line(aes(y = del4, col = 'Delta4')) +
geom_point(aes(y = del5, col = 'Delta5'), show.legend = FALSE) +
scale_color_manual(values = c('black', '#F8766D', '#A3A500', '#00BF7D', '#00B0F6', '#E76BF3')) +
labs(title = 'Divided differences and original data', x = 'i', y = NULL) +
theme(legend.position = 'bottom', legend.title = element_blank())
ggplot(df_bass, aes(x = 1:length(L))) +
geom_line(aes(y = w, col = 'Data'), lwd = 1) +
geom_line(aes(y = del1, col = 'Delta')) +
geom_line(aes(y = del2, col = 'Delta2')) +
geom_line(aes(y = del3, col = 'Delta3')) +
geom_line(aes(y = del4, col = 'Delta4')) +
geom_point(aes(y = del5, col = 'Delta5'), show.legend = FALSE) +
scale_color_manual(values = c('black', '#F8766D', '#A3A500', '#00BF7D', '#00B0F6', '#E76BF3')) +
labs(title = 'Divided differences and original data', x = 'i', y = NULL) +
theme_igray() + scale_color_tableau()
ggplot(df_bass, aes(x = 1:length(L))) +
geom_line(aes(y = w, col = 'Data'), lwd = 1) +
geom_line(aes(y = del1, col = 'Delta')) +
geom_line(aes(y = del2, col = 'Delta2')) +
geom_line(aes(y = del3, col = 'Delta3')) +
geom_line(aes(y = del4, col = 'Delta4')) +
geom_point(aes(y = del5, col = 'Delta5'), show.legend = FALSE) +
labs(title = 'Divided differences and original data', x = 'i', y = NULL) +
theme_igray() + scale_color_tableau()
ggplot(df_bass, aes(x = 1:length(L))) +
geom_line(aes(y = w, col = 'Data'), lwd = 1) +
geom_line(aes(y = del1, col = 'Delta')) +
geom_line(aes(y = del2, col = 'Delta2')) +
geom_line(aes(y = del3, col = 'Delta3')) +
geom_line(aes(y = del4, col = 'Delta4')) +
geom_point(aes(y = del5, col = 'Delta5'), show.legend = FALSE) +
labs(title = 'Divided differences and original data', x = 'i', y = NULL) +
theme_igray() + scale_color_tableau('tableau20')
setwd("C:/Users/Dan/Dropbox/School/MSDA/DATA604/Discussion")
